# ðŸ“Œ Step 1: Import Required Libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px
import numpy as np

# ðŸ“Œ Step 2: Load the Netflix Dataset
df = pd.read_csv("netflix_titles.csv")

# ðŸ“Œ Step 3: Explore Data
print(df.shape)
print(df.columns)
print(df.info())
print(df.isnull().sum())

# ðŸ“Œ Step 4: Data Cleaning
# ðŸ“Œ Step 4: Data Cleaning
df['date_added'] = pd.to_datetime(df['date_added'], format='%B %d, %Y', errors='coerce')
df['year_added'] = df['date_added'].dt.year
df['month_added'] = df['date_added'].dt.month

# ðŸ“Œ Step 5: Distribution of Content Type (Movies vs TV Shows)
plt.figure(figsize=(6,4))
sns.countplot(x='type', data=df, palette='Set2')
plt.title('Distribution of Movies and TV Shows on Netflix')
plt.show()

# ðŸ“Œ Step 6: Top 10 Countries Producing Netflix Content
top_countries = df['country'].value_counts().head(10)
top_countries.plot(kind='bar', figsize=(8,5), color='orange')
plt.title('Top 10 Countries Producing Netflix Content')
plt.ylabel('Number of Titles')
plt.xlabel('Country')
plt.xticks(rotation=45)
plt.show()

# ðŸ“Œ Step 7: Netflix Content Added Over the Years
plt.figure(figsize=(10,5))
df['year_added'].value_counts().sort_index().plot(kind='bar', color='teal')
plt.title('Netflix Content Added Over the Years')
plt.xlabel('Year')
plt.ylabel('Number of Titles')
plt.xticks(rotation=45)
plt.grid(True)
plt.show()

# ðŸ“Œ Step 8: Top 10 Genres
genres = df['listed_in'].str.split(', ', expand=True).stack().value_counts().head(10)
genres.plot(kind='bar', figsize=(9,5), color='purple')
plt.title('Top 10 Genres on Netflix')
plt.ylabel('Number of Titles')
plt.xticks(rotation=45)
plt.show()

# ðŸ“Œ Step 9: Interactive Pie Chart of Type (TV Show vs Movie)
fig = px.pie(df, names='type', title='Movies vs TV Shows on Netflix', color_discrete_sequence=px.colors.sequential.RdBu)
fig.show()

# ðŸ“Œ Step 10: Heatmap of Null Values (Optional Insight)
plt.figure(figsize=(10,5))
sns.heatmap(df.isnull(), cbar=False, cmap='viridis')
plt.title("Missing Values Heatmap")
plt.show()

